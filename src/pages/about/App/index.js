import React, {useState, useEffect, useCallback} from "react"
import CountUp from "react-countup"
import classnames from "classnames"
import useApi from "api/useApi"
import {wame} from "js/utils"
import {reachGoal} from "js/ym"
import {useSnackbar} from "notistack"

import Typography from "@mui/material/Typography"
import Box from "@mui/material/Box"
import CardContent from "@mui/material/CardContent"
import Divider from "@mui/material/Divider"
import Button from "components/Button"
import Card from "components/Card"
import CardTitle from "components/CardTitle"
import Carousel from "components/Carousel"
import Link from "components/Link"
import VisibilitySensor from "components/VisibilitySensor"

import logoMainSrc from "images/logo/logo-main.svg"
import HowToRegRoundedIcon from "@mui/icons-material/HowToRegRounded"
import LiveHelpRoundedIcon from "@mui/icons-material/LiveHelpRounded"
import SecurityRoundedIcon from "@mui/icons-material/SecurityRounded"
import ChangeCircleRoundedIcon from "@mui/icons-material/ChangeCircleRounded"
import TipsAndUpdatesRoundedIcon from "@mui/icons-material/TipsAndUpdatesRounded"
import CloudUploadRoundedIcon from "@mui/icons-material/CloudUploadRounded"
import LanguageRoundedIcon from "@mui/icons-material/LanguageRounded"
import NewspaperRoundedIcon from "@mui/icons-material/NewspaperRounded"
import PhotoFilterRoundedIcon from "@mui/icons-material/PhotoFilterRounded"
import PsychologyRoundedIcon from "@mui/icons-material/PsychologyRounded"
import GroupRoundedIcon from "@mui/icons-material/GroupRounded"
import CheckCircleRoundedIcon from "@mui/icons-material/CheckCircleRounded"
import SearchRoundedIcon from "@mui/icons-material/SearchRounded"
import PersonRoundedIcon from "@mui/icons-material/PersonRounded"

import styles from "./index.module.scss"
import animateCSS from "styles/animate.module.scss"

const screenshots = [...Array(17)].map((_, index) =>
	require(`images/screenshots/${index + 1}.png`)
)
const features = [
	{
		title: "–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞—é—Ç—Å—è",
		description:
			"–≠—Ç–æ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞—à–µ–º—É –º–æ–∑–≥—É –∏—Å–∫–∞—Ç—å ¬´–ª–µ–≥–∫–∏–µ –ø—É—Ç–∏¬ª –∏ –ø–æ–≤—ã—à–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è.",
		icon: ChangeCircleRoundedIcon,
	},
	{
		title: "–ü–æ–¥—Å–∫–∞–∑–∫–∏",
		description:
			"–í—ã –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞ –∏–∑ 5.",
		icon: TipsAndUpdatesRoundedIcon,
	},
	{
		title: "–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –æ–±–ª–∞–∫–µ",
		description:
			"–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª—ã —É —Å–µ–±—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ. –ú—ã –æ–±–æ –≤—Å–µ–º –ø–æ–∑–∞–±–æ—Ç–∏–º—Å—è.",
		icon: CloudUploadRoundedIcon,
	},
	{
		title: "–ù—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä",
		description:
			"–ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –¢–µ—Å—Ç–Ω–∏–∫–æ–º —Å –ª—é–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ù–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å. –ü—Ä–æ—Å—Ç–æ –≤–æ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç.",
		icon: LanguageRoundedIcon,
	},
	{
		title: "–ù–∏–∫–∞–∫–æ–π —Ä–µ–∫–ª–∞–º—ã",
		description:
			"–ú—ã –ø—Ä–æ—Ç–∏–≤ —Ä–µ–∫–ª–∞–º—ã –≤–æ –≤—Å–µ—Ö –µ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è—Ö. –ù–∏–∫–∞–∫–∏—Ö –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω, –Ω–∏–∫–∞–∫–∏—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤.",
		icon: NewspaperRoundedIcon,
	},
	{
		title: "–ü—Ä–∏—è—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω",
		description:
			"–ü—Ä–æ—Å—Ç–æ–π –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. –ù–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ. –ö–∞–∫ –≤—ã –ª—é–±–∏—Ç–µ.",
		icon: PhotoFilterRoundedIcon,
	},
	{
		title: "–í–æ–≤–ª–µ—á–µ–Ω–∏–µ –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è",
		description:
			"–ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ, –∞–∫—Ç–∏–≤–∏–∑–∏—Ä—É—é—Ç –≤–∞—à—É –∑—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø–∞–º—è—Ç—å –∏ –ø–æ–º–æ–≥–∞—é—Ç –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –±—ã—Å—Ç—Ä–µ–µ.",
		icon: PsychologyRoundedIcon,
	},
]

const plans = [
	{
		name: "–°—Ç—É–¥–µ–Ω—Ç",
		color: "blue",
		icon: PersonRoundedIcon,
		price: 599,
		description: `1¬†–∞–∫–∫–∞—É–Ω—Ç. –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø —Å—Ä–∞–∑—É –∫–æ –≤—Å–µ–º –Ω–∞—à–∏–º —Ç–µ—Å—Ç–∞–º.`,
		message: "–ü—Ä–∏–≤–µ—Ç. –ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω ¬´–°—Ç—É–¥–µ–Ω—Ç¬ª.",
	},
	{
		name: "–ì—Ä—É–ø–ø–∞",
		color: "yellow",
		icon: GroupRoundedIcon,
		price: 4999,
		description: `10¬†–∞–∫–∫–∞—É–Ω—Ç–æ–≤. –≠–∫–æ–Ω–æ–º–∏—è¬†15%. –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø —Å—Ä–∞–∑—É –∫–æ –≤—Å–µ–º –Ω–∞—à–∏–º —Ç–µ—Å—Ç–∞–º.`,
		message: "–ü—Ä–∏–≤–µ—Ç. –ú–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω ¬´–ì—Ä—É–ø–ø–∞¬ª.",
	},
]

const TitleSubtitle = props => {
	const {title, subtitle} = props

	return (
		<div className={styles.titleSubtitle}>
			<Typography variant="h6" className={styles.title}>
				{title}
			</Typography>
			<Typography className={styles.subtitle}>{subtitle}</Typography>
		</div>
	)
}

const Feature = props => {
	const {title, description, className, icon: Icon} = props

	return (
		<Card className={classnames(styles.feature, className)}>
			<CardContent>
				<CardTitle className={styles.title}>
					<Icon className={styles.icon} /> {title}
				</CardTitle>
				<Typography className={styles.description}>
					{description}
				</Typography>
			</CardContent>
		</Card>
	)
}

const PlanCard = props => {
	const {name, color, icon: Icon, price, description, message} = props
	return (
		<VisibilitySensor partialVisibility once minTopValue={100}>
			{({isVisible}) => (
				<div
					className={classnames(
						styles.plan,
						isVisible
							? classnames(
									animateCSS.animated,
									animateCSS.fadeInUp,
									name === "–ì—Ä—É–ø–ø–∞"
										? animateCSS.delay05s
										: null
							  )
							: classnames(
									animateCSS.animated,
									animateCSS.fadeOutDown
							  )
					)}
					data-color={color}
				>
					<div className={styles.content}>
						<div className={styles.name}>
							<Icon className={styles.icon} /> ¬´{name}¬ª
						</div>
						<div className={styles.price}>{price}‚Ç∏</div>
						<div className={styles.description}>{description}</div>
					</div>
					<Link
						external
						to={wame({message})}
						className={styles.mtAuto}
					>
						<Button wide variant="white" className={styles.button}>
							–í—ã–±—Ä–∞—Ç—å
						</Button>
					</Link>
				</div>
			)}
		</VisibilitySensor>
	)
}

const App = () => {
	const {getWelcomeInfo} = useApi()
	const {enqueueSnackbar} = useSnackbar()

	const [welcomeInfo, setWelcomeInfo] = useState({
		questions: 179679,
		searches: 1242,
		subjects: 1204,
		users: 1334,
	})
	const digits = [
		{
			title: welcomeInfo.questions,
			subtitle: "–û—Ç–≤–µ—Ç–æ–≤ –≤ –±–∞–∑–µ",
			icon: CheckCircleRoundedIcon,
		},
		{
			title: welcomeInfo.subjects,
			subtitle: "–ü—Ä–µ–¥–º–µ—Ç–æ–≤ —Å –æ—Ç–≤–µ—Ç–∞–º–∏",
			icon: LiveHelpRoundedIcon,
		},
		{
			title: welcomeInfo.users,
			subtitle: "–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
			icon: GroupRoundedIcon,
		},
		{
			title: welcomeInfo.searches,
			subtitle: "–ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤",
			icon: SearchRoundedIcon,
		},
	]

	const onClickHeart = useCallback(() => {
		reachGoal("heart_click")
		enqueueSnackbar({
			message: <span className={styles.bigHeart}>üëÄ‚ù§Ô∏è</span>,
		})
	}, [enqueueSnackbar])

	useEffect(() => {
		;(async () => {
			try {
				const {status, data} = await getWelcomeInfo()
				if (status) {
					setWelcomeInfo(data)
				}
			} catch (err) {}
		})()
	}, [getWelcomeInfo])

	return (
		<>
			<div className={styles.logoWrapper}>
				<img src={logoMainSrc} alt="logo" className={styles.logo} />
			</div>
			<Box mb={3}>
				<TitleSubtitle
					title={
						<div className={styles.textAlignCenter}>–ü—Ä–∏–≤–µ—Ç¬†üëã</div>
					}
					subtitle={
						<div className={styles.textAlignCenter}>
							Testnik¬†‚Äî¬†—Å–µ—Ä–≤–∏—Å –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Å–µ—Å—Å–∏–∏,
							—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¢—É—Ä–∞–Ω–∞. –ì–æ—Ç–æ–≤—å—Å—è –∫
							—Å–µ—Å—Å–∏–∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –≤–º–µ—Å—Ç–µ —Å Testnik!
						</div>
					}
				/>
			</Box>

			<Box mb={3}>
				<div className={styles.buttons}>
					<Link internal block to="/signup">
						<Button
							wide
							variant="primary"
							iconAfter={HowToRegRoundedIcon}
						>
							–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
						</Button>
					</Link>
					<Link internal block to="/signin">
						<Button wide variant="faded">
							–í–æ–π—Ç–∏
						</Button>
					</Link>
				</div>
			</Box>

			<Box mb={3}>
				<Carousel
					images={[
						screenshots[0],
						screenshots[3],
						screenshots[4],
						screenshots[8],
					]}
				/>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ß—Ç–æ —Ç–∞–º –ø–æ —Ü–∏—Ñ—Ä–∞–º?"
						subtitle="–í—Å–µ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¢–µ—Å—Ç–Ω–∏–∫–∞ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ —Å–∞–º—ã–µ –ø–µ—Ä–µ–¥–æ–≤—ã–µ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã!"
					/>
				</Box>

				<div className={styles.digits}>
					{digits.map(({subtitle, title, icon: Icon}) => (
						<div key={subtitle} className={styles.digit}>
							<div className={styles.title}>
								<Icon className={styles.icon} />{" "}
								<VisibilitySensor
									partialVisibility
									once
									minTopValue={80}
								>
									{({isVisible}) => (
										<CountUp
											delay={300}
											separator=","
											end={isVisible ? title : 0}
										/>
									)}
								</VisibilitySensor>
							</div>
							<div className={styles.subtitle}>{subtitle}</div>
						</div>
					))}
				</div>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ü—Ä–∞–π—Å–∏–Ω–≥"
						subtitle="–°–∞–º—ã–µ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ü–µ–Ω—ã –Ω–∞ —Å–≤–µ—Ç–µ¬†üéì –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–æ–π–¥–µ—Ç—Å—è –≤–∞–º –Ω–µ –¥–æ—Ä–æ–∂–µ —á–∞—à–µ—á–∫–∏ –∫–æ—Ñ–µ."
					/>
				</Box>

				<div className={styles.plans}>
					{plans.map(item => (
						<PlanCard key={item.name} {...item} />
					))}
				</div>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫"
						subtitle="–ù–∞—Ö–æ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –ø–æ –ø–µ—Ä–≤—ã–º –±—É–∫–≤–∞–º –≤–æ–ø—Ä–æ—Å–∞. –í –Ω–∞—à–µ–π –æ–≥—Ä–æ–º–Ω–æ–π –±–∞–∑–µ –Ω–∞–π–¥–µ—Ç—Å—è –≤—Å–µ!"
					/>
				</Box>

				<Carousel
					images={[screenshots[4], screenshots[6], screenshots[11]]}
				/>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–†–µ–∂–∏–º –ø—Ä–æ–±–Ω–æ–π —Å–µ—Å—Å–∏–∏"
						subtitle="–í—ã–¥–∞—é—Ç—Å—è 25 —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É. –ü–æ—Å–ª–µ —Å–¥–∞—á–∏ –≤—ã —É–∑–Ω–∞–µ—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –¥–æ–ø—É—â–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏."
					/>
				</Box>

				<Carousel
					images={[screenshots[1], screenshots[12], screenshots[13]]}
				/>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º"
						subtitle="–ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤–∏—Ç–µ—Å—å –ø–æ –Ω–æ—á–∞–º –∏ –±–µ—Å–ø–æ–∫–æ–∏–º—Å—è –æ –≤–∞—à–∏—Ö –≥–ª–∞–∑–∫–∞—Ö. –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞."
					/>
				</Box>

				<Carousel
					images={[
						screenshots[2],
						screenshots[5],
						screenshots[10],
						screenshots[6],
						screenshots[13],
					]}
				/>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Å–≤–æ–∏ —Ç–µ—Å—Ç—ã"
						subtitle="–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ –¢–µ—Å—Ç–Ω–∏–∫ –∏ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ–±—â–µ–π –±–∞–∑–µ."
					/>
				</Box>

				<Carousel images={[screenshots[5], screenshots[14]]} />
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–í—Å–µ –µ—â–µ —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å?"
						subtitle={`–ù–∞–º –¥–æ–≤–µ—Ä—è—é—Ç –±–æ–ª–µ–µ ${
							Math.floor(welcomeInfo.users / 100) * 100
						} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å–µ–º—É —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—É. –ü–æ–ø—Ä–æ–±–æ–≤–∞–≤ –¢–µ—Å—Ç–Ω–∏–∫ –æ–¥–Ω–∞–∂–¥—ã, –≤—ã –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –±–µ–∑ –Ω–µ–≥–æ¬†üòÖ. –í–æ—Ç, —á—Ç–æ –µ—â–µ —É –Ω–∞—Å –≤ –∞—Ä—Å–µ–Ω–∞–ª–µ:`}
					/>
				</Box>

				<div className={styles.features}>
					{features.map((item, index) => (
						<VisibilitySensor
							key={item.title}
							once
							partialVisibility
							minTopValue={80}
						>
							{({isVisible}) => (
								<Box key={item.title} mb={2}>
									<Feature
										{...item}
										className={
											isVisible
												? classnames(
														animateCSS.animated,
														animateCSS.fadeInUp,
														animateCSS.delay02s
												  )
												: classnames(
														animateCSS.animated,
														animateCSS.fadeOutDown
												  )
										}
									/>
								</Box>
							)}
						</VisibilitySensor>
					))}
				</div>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–ó–∞–∫–ª–∞–¥–∫–∏"
						subtitle="–í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤ –∑–∞–∫–ª–∞–¥–∫–∏, —á—Ç–æ–±—ã –ø–æ–∑–∂–µ –ø–æ–¥—É—á–∏—Ç—å –∏—Ö –æ—Ç–¥–µ–ª—å–Ω–æ."
					/>
				</Box>

				<Carousel images={[screenshots[15], screenshots[16]]} />
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="Testnik –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö"
						subtitle="–ú—ã —á–∞—Å—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–º –∞–∫—Ü–∏–∏ –≤ Instagram, –¥–µ–ª–∞–µ–º —Å–∫–∏–¥–∫–∏ –∏ –≤—Å—è—á–µ—Å–∫–∏ –ø–æ–æ—â—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–æ–¥–ø–∏—à–∏—Å—å, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π."
					/>
				</Box>

				<div className={styles.buttons}>
					<Link
						external
						targetBlank
						block
						to="https://instagram.com/testnik.kz"
					>
						<Button
							wide
							variant="primary"
							className={styles.instagram}
							onClick={() => reachGoal("instagram")}
						>
							Instagram
						</Button>
					</Link>
					<Link
						external
						targetBlank
						block
						to="https://twitter.com/testnikkz"
					>
						<Button
							wide
							variant="primary"
							className={styles.twitter}
						>
							Twitter
						</Button>
					</Link>
					<Link external targetBlank block to={wame()}>
						<Button
							wide
							variant="primary"
							className={styles.whatsapp}
						>
							WhatsApp
						</Button>
					</Link>
				</div>
			</Box>

			<Divider className={styles.divider} />

			<Box my={3}>
				<Box mb={2}>
					<TitleSubtitle
						title="–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?"
						subtitle={
							<>
								–ú—ã —Å–æ–±—Ä–∞–ª–∏ —Å–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤,
								–≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö —É –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¢–µ—Å—Ç–Ω–∏–∫–∞. –ï—Å–ª–∏
								–Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å ‚Äî{" "}
								<Link
									external
									to={wame({
										message:
											"–ü—Ä–∏–≤–µ—Ç. –ú–æ–π –∞–∫–∫–∞—É–Ω—Ç –≤ –¢–µ—Å—Ç–Ω–∏–∫–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª—Å—è. –ú–æ–∂–Ω–æ –ª–∏ –µ–≥–æ –∫–∞–∫-—Ç–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?",
									})}
								>
									—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
								</Link>
								.
							</>
						}
					/>
				</Box>

				<div className={styles.buttons}>
					<Link external block targetBlank to="/faq">
						<Button
							wide
							variant="primary"
							iconAfter={LiveHelpRoundedIcon}
						>
							–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
						</Button>
					</Link>
					<Link external block targetBlank to="/terms">
						<Button
							wide
							variant="faded"
							iconAfter={SecurityRoundedIcon}
						>
							–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
						</Button>
					</Link>
				</div>
			</Box>

			<Box mt={10}>
				<div className={styles.textAlignCenter}>
					<span className={styles.heart} onClick={onClickHeart}>
						‚ù§Ô∏è
					</span>
				</div>
			</Box>
		</>
	)
}

export default App
